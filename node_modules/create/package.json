{
  "name": "create",
  "description": "The missing Native.create() functions that ECMA forgot.",
  "keywords": [
    "create",
    "ecma",
    "function",
    "subclass",
    "prototype",
    "array",
    "number"
  ],
  "version": "0.0.2",
  "author": {
    "name": "Nathan Rajlich",
    "email": "nathan@tootallnate.net",
    "url": "http://tootallnate.net"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/create.git"
  },
  "main": "./index.js",
  "scripts": {
    "test": "./test/run.sh"
  },
  "engines": {
    "node": ">= 0.4.0 && < 0.7.0"
  },
  "readme": "create\n=========\n### The missing Native.create() functions that ECMA forgot.\n\n`create` is a module for node.js (and someday the browser too) that implements the\n*\"missing\"* `.create()` functions on the rest of the native data types in\nJavaScript.\n\nThere's already `Object.create()`. So why not `Array.create()`? Or\n`Function.create()`? Well that's exactly what this module adds functionality for.\n\nIn essense, this gives you a clean interface for subclassing the native classes,\nand also gets all the same benefits that `Object.create()` gives you, like setting\nthe prototype at creation-time, and being able to pass an object descriptor in to\ndefine additional properties.\n\nWhen you require the module, you invoke it as a function and pass in any native\nclasses you want extended with a `.create()` function. This can be done with\n*any* of the native types.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install create\n```\n\n\nExample\n-------\n\nLet's make a subclass of `Array`, that includes a `remove()` function:\n\n``` js\nrequire('create')(Array)\n\n// `Array2` is the prototype of our subclass\nvar Array2 = Object.create(Array.prototype)\n\n// remove() impl from http://ejohn.org/blog/javascript-array-remove\nArray2.remove = function (from, to) {\n  var rest = this.slice((to || from) + 1 || this.length);\n  this.length = from < 0 ? this.length + from : from;\n  return this.push.apply(this, rest);\n}\n\n\n// now we can create an instance of Array2\nvar a = Array.create(Array2)\n\n// add some items to it\na.push(1, 2, 3)\na.push('foo', 'bar')\n// [1, 2, 3, 'foo', 'bar']\n\na.remove(1)\n// [1, 3, 'foo', 'bar']\n```\n\n\nLimitations\n-----------\n\nThis module depends on the writability of the `__proto__` property on objects.\nFrom a browser standpoint, this module will only work in browsers where that is\ntrue (`__proto__` *MAY* be changed). In node this will _always_ work.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/TooTallNate/create/issues"
  },
  "_id": "create@0.0.2",
  "dist": {
    "shasum": "c5c4695cba7f9950fb7908577c756ef520b93f0e"
  },
  "_from": "create@",
  "_resolved": "https://registry.npmjs.org/create/-/create-0.0.2.tgz"
}
